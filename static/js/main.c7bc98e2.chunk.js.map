{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","msg","Navbar","mode","href","title","id","onClick","togglemode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","newtext","toUpperCase","showAlert","toLowerCase","tet","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c7bc98e2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n             props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n            </div>\r\n    )\r\n}\r\n export default Alert","import React from 'react'\r\n// import {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" /\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'} `}>\r\n              <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleonclick = () =>{      \r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Convert to Uppercase\", \"success\");\r\n    }\r\n    const handlelowclick = () =>{\r\n       let newtext = text.toLowerCase();\r\n       setText(newtext);\r\n       props.showAlert(\"Convert to Lowercase\", \"success\");\r\n    }\r\n    const handlecopy = () =>{\r\n        var tet = document.getElementById('mybox');\r\n        tet.select();\r\n        navigator.clipboard.writeText(tet.value);\r\n        props.showAlert(\"Copied to clipboard\", \"success\");\r\n    }\r\n    const handlecleartext = () =>{\r\n        setText(\"\");\r\n        props.showAlert(\"Clear text\", \"success\");\r\n    }\r\n    const handlespaces = () =>{\r\n        var newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n    const handleonchange = (event) =>{\r\n        setText(event.target.value);  \r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\"  style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea id=\"mybox\"  className=\"form-control\" rows=\"8\" value={text} onChange={handleonchange} style={{backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleonclick}> convert to uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlelowclick}> convert to lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlecleartext}> clear text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlecopy}> copy text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlespaces}> Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.08 * text.split(\" \").length } minute read</p>\r\n            <h3>Text preview</h3>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport { useState } from 'react/cjs/react.development';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] = useState(\"light\")\n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n       msg: message,\n       type: type\n    })\n    setTimeout(()=>{\n       setAlert(null)  \n    },1500);\n  } \n  const togglemode = () =>{\n    if(mode === 'light'){\n      setMode(\"dark\")\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has been enables\", \"success\");\n    }\n    else{\n      setMode(\"light\")\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enables\", \"success\");\n    }\n  }\n\n  \n  return (\n    <>\n    {/* <Router> */}\n     <Navbar title = \"Myapp\" mode={mode} togglemode={togglemode}/>\n     <Alert alert={alert}/> \n     <div className=\"container\">\n      {/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\"> */}\n          <TextForm heading =\"Enter the Text below\" showAlert={showAlert} mode={mode}/>\n          {/* </Route>\n      </Switch>\n      <About/> */}\n     </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}